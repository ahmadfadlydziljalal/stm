version: "3.7"

# SERVICES
services:

  db:
    image: mysql:8.0.28-oracle
    hostname: mysql
    container_name: ${APP_NAME}-db
    tty: false
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ${APP_NAME}-volumes:/var/lib/mysql/
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - ${APP_NAME}-network
    ports:
      - ${DB_PORT}:3306

  check-db-started:
    image: jwilder/dockerize:0.6.1
    container_name: ${APP_NAME}-check-db-started
    depends_on:
      - db
    command: 'dockerize -wait=tcp://db:3306'

  php:
    image: "${REGISTRY_HOST}/${APP_NAME}-php:latest"
    hostname: php
    container_name: ${APP_NAME}-php
    tty: true
    working_dir: /var/www/html
    ports:
      - "${WEB_SERVER_PORT}:80"
      - "443:443"
    env_file:
      - .env
    networks:
      - ${APP_NAME}-network
    volumes:
      - ./000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./etc:/etc/letsencrypt:ro
      - ./var:/var/lib/letsencrypt
    depends_on:
      - check-db-started
      # restart: on-failure

      #certbot:
      #image: certbot/certbot
      #container_name: certbot
      #hostname: certbot
      #volumes:
      #- ./etc:/etc/letsencrypt:rw
      #- ./var:/var/lib/letsencrypt:rw
      #- ./www:/var/www/html/web:rw
      #- ./logs:/var/log:rw
      #command: >-
      #certonly
      #--webroot
      #--webroot-path=/var/www/html/web
      #--email ahmadfadlydziljalal@gmail.com
      #--agree-tos
      #--no-eff-email
      #--force-renewal
      #-d stm.dzil.my.id
      #depends_on:
      #- php

  # Mongo Service, database pendukung, eg: cache, log, dll
  mongodb:
    image: mongo:5.0.6
    container_name: ${APP_NAME}-mongo
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ${APP_NAME}-mongo-volumes:/data/db
      - ./.docker/mongo/:/docker-entrypoint-initdb.d/:ro
    ports:
      - ${MONGO_PORT}:27017
    networks:
      - ${APP_NAME}-network

# Docker Networks
networks:
  stm-network:
    driver: bridge

# Docker Volumes
volumes:
  stm-volumes:
    driver: local
  stm-mongo-volumes:
    driver: local